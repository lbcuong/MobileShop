@model IEnumerable<MobileShop.Areas.Admin.Models.Item>

@using Microsoft.AspNetCore.Identity
@using MobileShop.Areas.Identity.Data
@inject SignInManager<MobileShopUser> SignInManager
@inject UserManager<MobileShopUser> UserManager

@{
    ViewData["Title"] = "Items";
    Layout = "~/Areas/Admin/Views/shared/_layout.cshtml";
}

<div class="border-bottom m-0 p-0 mb-2">
    <h5>Item Management / Items</h5>
</div>

<div class="d-flex justify-content-between m-0 p-0 mb-2">
    @if (SignInManager.IsSignedIn(User) && (Context.User.IsInRole("Admin")))
    {
        <a class="create-function btn btn-info mb-2 text-white" asp-action="Create">New Items</a>
    }
    <form asp-controller="Items" asp-action="Index">
        <div class="input-group">
            <input class="search-field border-0" type="text" placeholder="  Filtering ..." name="SearchString" />
            <button class="btn btn-info text-light" type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
        </div>
    </form>
</div>

<div class="table-responsive m-0 p-0">
    <table class="table table-bordered table-hover table-sm">
        <thead class="sticky-top">
            <tr>
                <th>
                    <a class="text-dark text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["CategorySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model.ItemCategoryId)
                    </a>
                </th>
                <th>
                    <a class="text-dark text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["GroupSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model.ItemGroupId)
                    </a>
                </th>
                <th>
                    <a class="text-dark text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model.Name)
                    </a>
                </th>
                <th>
                    <a class="text-dark text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model.Quantity)
                    </a>
                </th>
                <th>
                    <a class="text-dark text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model.Price) ₫
                    </a>
                </th>
                <th>
                    <a class="text-dark text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["CreatedDateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model.CreatedDate)
                    </a>
                </th>
                <th>
                    <a class="text-dark text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["UpdatedDateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        @Html.DisplayNameFor(model => model.UpdatedDate)
                    </a>
                </th>
                @if (SignInManager.IsSignedIn(User) && (Context.User.IsInRole("Admin")))
                {
                    <th>
                        Options
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemCategory.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ItemGroup.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.ValueFor(modelItem => item.CreatedDate, "{0:MMMM dd, yyyy H:mm:ss}")
                </td>
                <td>
                    @Html.ValueFor(modelItem => item.UpdatedDate, "{0:MMMM dd, yyyy H:mm:ss}")
                </td>
                @if (SignInManager.IsSignedIn(User) && (Context.User.IsInRole("Admin")))
                {
            <td>
                <a class="managing text-decoration-none" asp-action="Edit" asp-route-id="@item.ItemId">Edit</a> |
                <a class="managing text-decoration-none" asp-action="Details" asp-route-id="@item.ItemId">Details</a> |
                <a class="managing text-decoration-none" asp-action="Delete" asp-route-id="@item.ItemId">Delete</a>
            </td>
                }
            </tr>
            }
        </tbody>
    </table>
</div>


